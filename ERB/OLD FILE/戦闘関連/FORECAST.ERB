;--------------------------------------------------
@ATTACK_PLACE_DECISION
#DIM CHISEI_CAL
#DIM CCOUNT
;触手/敵の攻撃箇所を決定

$SELECT_LOOP
;行動ごとに次ターンの攻撃箇所を決定
IF TFLAG:10 == 1
	IF RAND:2 == 0
		TFLAG:11 |= 1
	ELSE
		IF TALENT:近距離得意 && RAND:3 == 0
			TFLAG:11 |= 1
		ENDIF
	ENDIF

	IF RAND:2 == 0
		TFLAG:11 |= 2
	ELSE
		IF TALENT:中距離得意 && RAND:3 == 0
			TFLAG:11 |= 2
		ENDIF
	ENDIF

	IF RAND:2 == 0
		TFLAG:11 |= 4
	ELSE
		IF TALENT:遠距離得意 && RAND:3 == 0
			TFLAG:11 |= 4
		ENDIF
	ENDIF
	IF RAND:10 == 0
		TFLAG:11 |= 8
	ELSE
		IF TALENT:空中得意 && RAND:8 == 0
			TFLAG:11 |= 8
		ENDIF
	ENDIF
ELSEIF TFLAG:10 == 2 || TFLAG:10 == 5
	SIF RAND:4 == 0
		TFLAG:11 |= 1
	SIF RAND:4 == 0
		TFLAG:11 |= 2
	SIF RAND:4 == 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 3
	SIF RAND:3 != 0
		TFLAG:11 |= 1
	SIF RAND:4 != 0
		TFLAG:11 |= 2
	SIF RAND:5 != 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 6
	SIF RAND:5 != 0
		TFLAG:11 |= 1
	SIF RAND:4 != 0
		TFLAG:11 |= 2
	SIF RAND:3 != 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSE
ENDIF

;何もしない場合は絶対に捕まる
IF TCVAR:0 == 1 && TCVAR:2 == 体勢：何もしない
	TFLAG:11 |= 1
ELSEIF TCVAR:0 == 2 && TCVAR:2 == 体勢：何もしない
	TFLAG:11 |= 2
ELSEIF TCVAR:0 == 3 && TCVAR:2 == 体勢：何もしない
	TFLAG:11 |= 4
ELSEIF GETBIT(TCVAR:216, 1) && TCVAR:2 == 体勢：何もしない
	TFLAG:11 |= 8
ENDIF

;攻撃箇所の数を算出
SIF (TFLAG:11 & 1) == 1
	TFLAG:12 ++
SIF (TFLAG:11 & 2) == 2
	TFLAG:12 ++
SIF (TFLAG:11 & 4) == 4
	TFLAG:12 ++
;攻撃箇所が設定されていないならループで再設定を行う
SIF TFLAG:12 == 0 && TFLAG:10 != 4
	GOTO SELECT_LOOP

;対空攻撃の設定
IF TFLAG:10 == 1
	IF RAND:4 == 0
		TFLAG:11 |= 8
	ELSE
		IF TALENT:空中得意 && RAND:4 == 0
			TFLAG:11 |= 8
		ENDIF
	ENDIF
ELSEIF TFLAG:10 == 2 || TFLAG:10 == 5
	SIF RAND:5 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 3
	SIF RAND:3 != 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 6
	SIF RAND:5 == 0
		TFLAG:11 |= 8
ELSE
ENDIF
;空中に居ない場合、50%の確率で対空範囲を除外
SIF GETBIT(TCVAR:216, 1) == 0 && RAND:2 == 0
	CLEARBIT TFLAG:11, 3
;全体攻撃の場合、75%の確率で対空範囲を除外
SIF TFLAG:12 == 3 && RAND:4 != 0
	CLEARBIT TFLAG:11, 3

;予測成否判定
LOCAL:0 = MAXBASE:知性

;見切りによる予測精度上昇効果
SIF TFLAG:25 > 0
	LOCAL:0 = LOCAL:0 * 3 / 2 + 25

;見切り効果のリセット
TFLAG:25 = 0

;気力による補正
CALL PERCENT_CAL, BASE:気力 * 2, MAXBASE:気力
IF RESULT < 100
	LOCAL:0 = LOCAL:0 * (RESULT + 300) /400
ENDIF

;衣装による補正
CALL CLOTH_BATTLE_HOSEI, "CHISEI"
LOCAL:0 = LOCAL:0 * RESULT / 100

;心境による補正
CALL SHINKYOU_CHECK, "CHISEI", LOCAL:0
LOCAL:0 = RESULT

;戦闘支援による補正
FOR CCOUNT, 0, CHARANUM
	SIF CCOUNT == MASTER || CCOUNT > 6
		CONTINUE
	CALL CHECK_ACTION("支援",CCOUNT)
	SIF RESULT == 0
		CONTINUE
	IF CFLAG:CCOUNT:100 == 106
		CHISEI_CAL = MAXBASE:CCOUNT:知性 / 4
		;衣装による補正
		CALL CLOTH_BATTLE_HOSEI, "CHISEI", CCOUNT
		CHISEI_CAL = CHISEI_CAL * RESULT / 100
		;インカム
		SIF CFLAG:CCOUNT:43 == 511
			CHISEI_CAL = CHISEI_CAL * 110 / 100 + 5
		;支援者が献身的
		SIF TALENT:CCOUNT:献身的 > 0
			CHISEI_CAL = CHISEI_CAL * 110 / 100 + 5
		;対象者が自分勝手
		SIF TALENT:TARGET:自分勝手 > 0
			CHISEI_CAL = CHISEI_CAL * 25 / 100
		LOCAL:0 += CHISEI_CAL
	ENDIF
NEXT

;ボス触手/敵キャラの知性
IF FLAG:110
	LOCAL:1 = MAXBASE:(FLAG:111):知性
ELSE
	CALL TENTACLE_ACCESS, "CHISEI"
	LOCAL:1 = RESULT
ENDIF
LOCAL:2 = LOCAL:0 + LOCAL:1
LOCAL:3 = 160 * LOCAL:0 / LOCAL:2 + 96

IF FLAG:999 == 1
	PRINTFORML PC知性：{LOCAL:0}({MAXBASE:知性})
	PRINTFORML 敵知性：{LOCAL:1}
	PRINTFORML {LOCAL:3} / 256（{100 * LOCAL:3 / 256}％）    ファンブル値{(256 - LOCAL:3) / 4}（{(256 - LOCAL:3) * 25 / 256}％）
ENDIF

;ファンブル
IF RAND:256 < (256 - LOCAL:3) / 4 && SELECTCOM != 7 && (GETBIT(TCVAR:217, 0) == 0 || FSTYLE_NAME_F(TARGET,TCVAR:0) != "知略")
	SIF FLAG:999 == 1
		PRINTFORML 予測ファンブル！
	TCVAR:30 = -1
	TCVAR:31 = -1
	TCVAR:32 = -1
ENDIF
;予測数値決定
FOR LOCAL:5, 0, 3
	IF RAND:256 < LOCAL:3
		CALL INT_EVAL, LOCAL:0, LOCAL:1
		CALL INVERSION_PROBABILITY, GETBIT(TFLAG:11, LOCAL:5), RESULT
		TCVAR:(LOCAL:5 + 30) = RESULT
	ELSE
		TCVAR:(LOCAL:5 + 30) = -1
	ENDIF
NEXT
;空中の予測は別枠
IF RAND:256 < LOCAL:3
	CALL INT_EVAL, LOCAL:0 * 2, LOCAL:1
	CALL INVERSION_PROBABILITY, GETBIT(TFLAG:11, 3), RESULT
	TCVAR:33 = RESULT
ELSE
	TCVAR:33 = -1
ENDIF
;--------------------------------------------------
@MAJORITY_VOTING_PROBABILITY, ARG:0, ARG:1, ARG:2
;確率の決定
;ARG:0	結果（0 or 1）
;ARG:1	確率の偏り（(128 ± n) / 256）
;ARG:2	確率の偏り（(128 ± n) / 256）
LOCAL:0 = 128 - ARG:1
SIF ARG:0
	LOCAL:0 += ARG:1 * 2
LOCAL:0 += ARG:2

DO
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 1, LOCAL:0
	LOCAL:1 = RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 2, LOCAL:0
	LOCAL:1 += RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 3, LOCAL:0
	LOCAL:1 += RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 4, LOCAL:0
	LOCAL:1 += RESULT
LOOP (ARG:0 == 0 && (LOCAL:1 == 10)) || (ARG:0 > 0 && (LOCAL:1 == 0))

RETURN LOCAL:1



;--------------------------------------------------
@MAJORITY_VOTING_PROBABILITY_NUM ,ARG:0 ,ARG:1
;ARG:0	試行回数
;ARG:1	確率(N / 256)

$SAME_RESULT

LOCAL:0 = 0
LOCAL:1 = 0
REPEAT ARG:0
	IF RAND:256 < ARG:1
		LOCAL:0 += 1
	ELSE
		LOCAL:1 += 1
	ENDIF
REND

IF LOCAL:0 == LOCAL:1
	GOTO SAME_RESULT
ELSEIF LOCAL:0 > LOCAL:1
	RETURN ARG:0
ELSE
	RETURN 0
ENDIF



;--------------------------------------------------
@FORECAST_OUTPUT
;確率の表示

LOCAL = TCVAR:30
SIF TCVAR:0 == 0
	LOCAL = 0
PRINT 近:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %

LOCAL = TCVAR:31
SIF TCVAR:0 == 0
	LOCAL = 0
PRINT  中:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %

LOCAL = TCVAR:32
SIF TCVAR:0 == 0
	LOCAL = 0
PRINT  遠:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %

;--------------------------------------------------
@FORECAST_OUTPUT_NUM, ARG
;ARG	確率（n / 100）

IF ARG == -1
	SETCOLOR 48, 48, 48
ELSE
	IF ARG <= 60
		LOCAL:0 = 0
	ELSE
		LOCAL:0 = LIMIT(-105 + 40 * ARG / 10, 55, 255)
	ENDIF
	IF ARG <= 50
		LOCAL:1 = LIMIT(55 + 40 * ARG / 10, 55, 255)
	ELSEIF ARG >= 80
		LOCAL:1 = 0
	ELSE
		LOCAL:1 = LIMIT(455 - 35 * ARG / 10, 55, 255)
	ENDIF
	IF ARG >= 40
		LOCAL:2 = 0
	ELSE
		LOCAL:2 = LIMIT(255 - 40 * ARG / 10, 55, 255)
	ENDIF
	SETCOLOR LOCAL:0, LOCAL:1, LOCAL:2
ENDIF
IF ARG == -1
	PRINT  ？
ELSE
	PRINTFORM {ARG, 3}
ENDIF
RESETCOLOR


;両者の知性を比較し、確率表示に使う値（0〜10）を算出する
;--------------------------------------------------
@INT_EVAL, PC_INT, EN_INT
;RAND_VAR	確率の偏り算出用　RAND_VAR:11は総和
;PC_INT		プレイヤーキャラクター知性
;EN_INT		敵知性
;PER_INT	敵知性に対するプレイヤーキャラクター知性の割合（%）

#DIM RAND_VAR, 12
#DIM PC_INT
#DIM EN_INT
#DIM PER_INT
#DIM LCOUNT

;敵ごとの補正
IF FLAG:110 == 1
	LOCAL = 0
ELSEIF FLAG:10 == 0
	LOCAL = 25 + RAND:50
ELSEIF FLAG:10 == 1
	LOCAL = 25 + RAND:75
ELSEIF FLAG:10 == 2
	LOCAL = 50 + RAND:25
ENDIF
;ソロモードだと補正半減
SIF FLAG:0 == 2
	TIMES LOCAL, 0.50
;ハードモードだと補正1.5倍
SIF FLAG:0 == 4
	TIMES LOCAL, 1.50
EN_INT = EN_INT + LOCAL

CALL PERCENT_CAL, PC_INT, EN_INT
PER_INT = RESULT
VARSET RAND_VAR


FOR LCOUNT, 0, 11
	RAND_VAR:LCOUNT = ((LCOUNT * 2 - 10) * (105 - PER_INT) + LCOUNT * 5 + 250) / 33
	;知性比による補正
	IF PER_INT < 40
		SIF LCOUNT < 3
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 3
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 4
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 5
			TIMES RAND_VAR:LCOUNT, 1.25
		SIF LCOUNT == 6
			TIMES RAND_VAR:LCOUNT, 1.50
		SIF LCOUNT == 7
			TIMES RAND_VAR:LCOUNT, 1.25
	ELSEIF PER_INT < 80
		SIF LCOUNT < 2
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 2
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 3
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 5
			TIMES RAND_VAR:LCOUNT, 1.25
	ELSEIF PER_INT < 120
		SIF LCOUNT == 0
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 1
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 2
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 9
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 10
			TIMES RAND_VAR:LCOUNT, 0.50
	ELSEIF PER_INT < 150
		SIF LCOUNT == 0
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 1
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 8
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 9
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 10
			RAND_VAR:LCOUNT = 0
	ENDIF
	RAND_VAR:11 += RAND_VAR:LCOUNT
NEXT

;DEBUG
;PRINTFORML PER_INT {PER_INT}
;PRINTFORML {RAND_VAR:0} / {RAND_VAR:1} / {RAND_VAR:2} / {RAND_VAR:3} / {RAND_VAR:4} / {RAND_VAR:5} / {RAND_VAR:6} / {RAND_VAR:7} / {RAND_VAR:8} / {RAND_VAR:9} / {RAND_VAR:10}
;PRINTFORML SUM {RAND_VAR:11}

RAND_VAR:11 = RAND:(RAND_VAR:11)

;PRINTFORML ROLL {RAND_VAR:11}

FOR LCOUNT, 0, 11
	SIF RAND_VAR:11 < RAND_VAR:LCOUNT
		BREAK
	RAND_VAR:11 -= RAND_VAR:LCOUNT
NEXT

;PRINTFORML RETURN {LCOUNT - 1}
;PRINTL 

RETURN LCOUNT - 1


;INT_EVALの値から、表示する予測値（0〜100）を決定する
;--------------------------------------------------
@INVERSION_PROBABILITY, BLN_VAR, INT_VAR
;BLN_VAR	攻撃の有無　ブーリアン値
;INT_VAR	INT_EVALの値
;		0なら予測値は100もしくは0
;		1なら予測値は90もしくは10
;			：
;		10なら予測値は50

#DIM BLN_VAR
#DIM INT_VAR
#DIM RES_VAR

IF BLN_VAR
	IF INT_VAR == 0
		RES_VAR = 100
	ELSEIF INT_VAR <= RAND:20
		RES_VAR = 100 - INT_VAR * 5
	ELSEIF RAND:2 == 0
		RES_VAR = -1
	ELSE
		RES_VAR = INT_VAR * 5
	ENDIF
ELSE
	IF INT_VAR == 0
		RES_VAR = 0
	ELSEIF INT_VAR <= RAND:20
		RES_VAR = INT_VAR * 5
	ELSEIF RAND:2 == 0
		RES_VAR = -1
	ELSE
		RES_VAR = 100 - INT_VAR * 5
	ENDIF
ENDIF

RETURN RES_VAR

