;--------------------------------------------------
;キャラの強化
;修練Pを使用してベース値を上昇させたり、刻印を消したりする
@CHARA_POWERUP,ARG
#DIM LCOUNT
#DIM CAL_VAR, 2
#DIM MAG_VAR
#DIM BNS_VAR, 17
#DIM ST_UP, 12
#DIM COST_VAR, 13
#DIM SUM_COST
#DIM SUM_PRICE
#DIM MRK_VAR, 5
#DIM CONST BASE数 = 3
#DIM CONST ST数 = 7
#DIM CONST ST始点 = 10
#DIM CONST ST終点 = 14
#DIM CONST 刻印数 = 5
;振り分け済みボーナス値
#DIM BASE_DIG
;ステータスの最大桁数
#DIMS SH_STR
;キャラ管理
#DIM LCHAR
#DIM RCHAR
;--------------------------------
$LOOP_FIRST
REDRAW 0

BASE_DIG = 4
FOR LCOUNT, 0, ST数
	CAL_VAR = LCOUNT
	SIF LCOUNT >= BASE数
		CAL_VAR += ST始点 - BASE数
	STRLENFORM {MAXBASE:ARG:CAL_VAR + 1}
	BASE_DIG = LIMIT(RESULT, BASE_DIG, 100)

	ST_UP:LCOUNT = MAXBASE:ARG:CAL_VAR
NEXT

;基本の消費修練P
LOCAL:99 = 50

$LOOP_CHARA_POWERUP
RESULT = ARG
IF RESULT == 999
ELSE
	LOCAL:99 = TARGET
	TARGET = RESULT
	PRINTFORML %CALLNAME:TARGET%を選びました
	;部位結界の上限設定
	CALL BASEUP_CAL_SHIELD, TARGET
	;自分より左にCFLAG:0 == 0のキャラが居るか
	LCHAR = 0
	FOR LOCAL,0,TARGET
		SIF LOCAL == MASTER
			CONTINUE
		SIF TARGET == 1
			CONTINUE
		SIF CFLAG:LOCAL:999 == 0
			CONTINUE
		SIF CFLAG:LOCAL:0 == 0
			LCHAR = LOCAL
	NEXT
	;自分より右にCFLAG:0 == 0のキャラが居るか
	RCHAR = 0
	FOR LOCAL,TARGET+1,CHARANUM
		SIF LOCAL == MASTER
			CONTINUE
		SIF CFLAG:LOCAL:999 == 0
			CONTINUE
		IF CFLAG:LOCAL:0 == 0
			RCHAR = LOCAL
			BREAK
		ENDIF
	NEXT
	
	;強化の処理
	$LOOP_CHARA_POWERUP_HOWDO
	PRINTL 
	PRINTFORML %CALLNAME:TARGET%の%PALAMNAME:20%  {JUEL:修練P}P
	DRAWLINE

	;総必要修練値の計算
	SUM_COST = 0
	FOR LCOUNT, 0, ST数 + 刻印数
		SUM_COST += COST_VAR:LCOUNT
	NEXT
	FOR LCOUNT, 0, 感覚数
		SIF BNS_VAR:(LCOUNT + ST数 + 刻印数) == 1
			SUM_COST += 30
	NEXT
	SUM_COST += COST_VAR:12

	CAL_VAR = BASE_DIG / 2
	PRINTFORML 　　 %UNICODE(0x2000) * CAL_VAR%強化後 %UNICODE(0x2000) * BASE_DIG%基礎値　 消費修練P
	MAG_VAR = 50
	FOR LCOUNT, 0, ST数
		;ベース値表示
		CAL_VAR:0 = LCOUNT
		SIF LCOUNT >= BASE数
			CAL_VAR:0 += ST始点 - BASE数
		PRINTFORM %BASENAME:(CAL_VAR:0), 6, LEFT%：
		SIF ST_UP:LCOUNT > MAXBASE:(CAL_VAR:0)
			SETCOLOR 255, 255, 0
		RESULTS = {ST_UP:LCOUNT, MIN(BASE_DIG,5),RIGHT}
		PRINTFORM %RESULTS,7,LEFT%
		RESETCOLOR
		;基礎値の変動
		PRINTFORM \@ LCOUNT < BASE数  ? {BASE:(CAL_VAR:0 + 50) + FEAT_BONUS_F(TARGET,LCOUNT), BASE_DIG} # {BASE:(CAL_VAR:0) + FEAT_BONUS_F(TARGET,LCOUNT), BASE_DIG} \@ → 
		PRINTFORM \@ LCOUNT < BASE数  ? {BASE:(CAL_VAR:0 + 50) + FEAT_BONUS_F(TARGET,LCOUNT) + BNS_VAR:LCOUNT * MAG_VAR, BASE_DIG} # {BASE:(CAL_VAR:0) + FEAT_BONUS_F(TARGET,LCOUNT) + BNS_VAR:LCOUNT * MAG_VAR, BASE_DIG} \@（{COST_VAR:LCOUNT, 4}）
		PRINTPLAIN  

		;2段階ダウン
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:LCOUNT < 2
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10, 2}]-{MAG_VAR * 2, 3}
		PRINTPLAIN  　 

		;1段階ダウン
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:LCOUNT < 1
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 1, 2}]-{MAG_VAR * 1, 3}
		PRINTPLAIN  　 

		;1段階アップ
		SETCOLOR 240, 240, 255
		SIF SUM_COST + 50 > JUEL:修練P
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 2, 2}]+{MAG_VAR * 1, 3}
		RESETCOLOR
		PRINTPLAIN  　 

		;2段階アップ
		SETCOLOR 240, 240, 255
		SIF SUM_COST + 100 > JUEL:修練P
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 3, 2}]+{MAG_VAR * 2, 3}
		RESETCOLOR
		PRINTL 
		SIF LCOUNT == 1
			MAG_VAR = 5
		SIF LCOUNT == 2
			PRINTL 
	NEXT
	PRINTL 

	;刻印の消去
	SH_STR = 刻印　：　
	FOR LCOUNT, 0, 刻印数

		;刻印の消去にかかるコスト計算
		;基本値
		CAL_VAR = (MARK:(LCOUNT) - BNS_VAR:(LCOUNT + 7)) * 100
		IF LCOUNT == 0
			CAL_VAR:1 = 13
		ELSEIF LCOUNT == 1
			CAL_VAR:1 = 16
		ELSEIF LCOUNT == 2
			CAL_VAR:1 = 14
		ELSEIF LCOUNT == 3
			CAL_VAR:1 = 17
		ELSEIF LCOUNT == 4
			CAL_VAR:1 = 15
		ELSE
			CAL_VAR:1 = 0
		ENDIF
		;二重に性格補正をかける
		MRK_VAR:LCOUNT = SEIKAKU_HOSEI_PALAM_F(SEIKAKU_CHECK_F(TARGET), CAL_VAR:1, SEIKAKU_HOSEI_PALAM_F(SEIKAKU_CHECK_F(TARGET), CAL_VAR:1, CAL_VAR))

		PRINTFORM %SH_STR%%MARKNAME:LCOUNT%　
		SIF BNS_VAR:(LCOUNT + ST数)
			SETCOLOR 255, 255, 0
 		CAL_VAR = MARK:LCOUNT - BNS_VAR:(LCOUNT + ST数)
		;刻印を*で表示
		PRINTFORM [%UNICODE(0x002A) * CAL_VAR%%UNICODE(0x002E) * (5 - CAL_VAR)%]
		RESETCOLOR
		PRINTFORM （{COST_VAR:(LCOUNT + ST数), 4}）
		PRINTPLAIN  

		CAL_VAR = 0
			CAL_VAR = (MARK:(LCOUNT) == 0) || (MARK:(LCOUNT) == BNS_VAR:(LCOUNT + ST数)) || (SUM_COST + MRK_VAR:LCOUNT) > JUEL:修練P
		;ボタン表示
		SETCOLOR 240, 240, 255
		SIF CAL_VAR
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT + 70}] 

		;刻印表示
		PRINTFORM {MARK:LCOUNT - BNS_VAR:(LCOUNT + ST数)} → {LIMIT((MARK:LCOUNT - BNS_VAR:(LCOUNT + ST数) - 1), 0, 5)}　　

		;必要P表示
		PRINTFORM +{MRK_VAR:LCOUNT, 4}
		RESETCOLOR

		SH_STR = 　　　　　
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:7 + BNS_VAR:8 + BNS_VAR:9 + BNS_VAR:10 + BNS_VAR:11 == 0
			SETCOLOR 128, 128, 128
		;最後の行のみ「解除」を表示
		SIF LCOUNT == 刻印数 - 1
			PRINT 　　　　　　　　[79]解除
		RESETCOLOR
		PRINTL 
	NEXT

	;結界の再構築
	;いずれかを素質として持っている場合のみ表示
	IF TALENT:Ｃ結界 + TALENT:Ｖ結界 + TALENT:Ａ結界 + TALENT:Ｂ結界
		PRINTL 
		SH_STR = 結界　：　
		FOR LCOUNT, 0, 感覚数
				CAL_VAR = LCOUNT + ST数 + 刻印数
			IF TALENT:(LCOUNT + 190)
				PRINTFORM %SH_STR%%TALENTNAME:(LCOUNT + 190)%の再構築　 （  \@BNS_VAR:CAL_VAR == 1 ? {30, 2} # {0, 2}\@）
				PRINTPLAIN  
				SETCOLOR 240, 240, 255
				SIF BASE:(LCOUNT + 30) == MAXBASE:(LCOUNT + 30) || SUM_COST + 30 > JUEL:修練P || BNS_VAR:CAL_VAR == 2
					SETCOLOR 128, 128, 128
				SIF BNS_VAR:CAL_VAR == 1
					SETCOLOR 255, 255, 0
				PRINTFORM [{LCOUNT + 80}]

				CALL PERCENT_CAL, BASE:(LCOUNT + 30), MAXBASE:(LCOUNT + 30)
				CAL_VAR:0 = LIMIT(255 - RESULT * RESULT * 4 / 200, 0, 255)
				CAL_VAR:1 = LIMIT(-215 - RESULT * RESULT / 100 + RESULT * 5, 0, 255)
				IF BNS_VAR:(LCOUNT + ST数 + 刻印数)
					CAL_VAR:0 = 255
					CAL_VAR:1 = 255
				ENDIF
				;資金を使用して再構築する場合
				IF BASE:(LCOUNT + 30) > 0
					CALL COLOR_BAR(BASE:(LCOUNT + 30),MAXBASE:(LCOUNT + 30),20,CAL_VAR:0,CAL_VAR:1,20,-160,6,32,20,1,UNICODE(0x25AE),UNICODE(0x25AE))
				ELSE
					SETCOLOR 128, 40, 40
						PRINT 　　　崩　壊　　　　
					RESETCOLOR
				ENDIF
				SETCOLOR 240, 240, 255
				SIF BASE:(LCOUNT + 30) == MAXBASE:(LCOUNT + 30) || BNS_VAR:(LCOUNT + ST数 + 刻印数) == 1 || SUM_PRICE + ABL:レベル * 625 > MONEY
					SETCOLOR 128, 128, 128
				SIF BNS_VAR:(LCOUNT + ST数 + 刻印数) == 2
					SETCOLOR 255, 255, 0
				PRINTFORM [{LCOUNT + 85}] ${ABL:レベル * 625, 5}
				SH_STR = 　　　　　
				RESETCOLOR
				;最後の行のみ「解除」を表示
				FOR CAL_VAR, 0, 感覚数
					SIF TALENT:(感覚数 + 189 - CAL_VAR)
						BREAK
				NEXT
				SETCOLOR 240, 240, 255
				SIF BNS_VAR:12 + BNS_VAR:13 + BNS_VAR:14 + BNS_VAR:15 == 0
					SETCOLOR 128, 128, 128
				SIF LCOUNT == 感覚数 - CAL_VAR
					PRINT  [89]解除
				RESETCOLOR
				PRINTL 
			ENDIF
		NEXT
	ENDIF

	;結界の獲得
	PRINTL 
	PRINTFORM           結界の獲得  　　 （{COST_VAR:12, 4}
	PRINTPLAIN ） 
	LOCAL = 0
	FOR LCOUNT, 0, 感覚数
		SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
			LOCAL += 1
	NEXT
	SIF GETBIT(BNS_VAR:16, 感覚数) || TALENT:避妊結界 > 0
		LOCAL += 1
	FOR LCOUNT, 0, 感覚数
		SIF LOCAL > 2
			SETCOLOR 128,128,128
		SIF LCOUNT == 1 && (GETBIT(BNS_VAR:16, 感覚数) || TALENT:避妊結界 > 0)
			SETCOLOR 128,128,128
		SIF TALENT:(LCOUNT + 190)
			SETCOLOR 80, 255, 80
		SIF GETBIT(BNS_VAR:16, LCOUNT)
			SETCOLOR 255, 255, 0
		PRINTFORM [{LCOUNT + 90}]%TALENTNAME:(LCOUNT + 190)%　
		RESETCOLOR
	NEXT
	SIF LOCAL > 2
		SETCOLOR 128,128,128
	SIF (GETBIT(BNS_VAR:16, 1) || TALENT:Ｖ結界 > 0)
		SETCOLOR 128,128,128
	SIF TALENT:避妊結界 > 0
		SETCOLOR 80, 255, 80
	SIF GETBIT(BNS_VAR:16, 感覚数)
		SETCOLOR 255, 255, 0
	PRINTFORM [94]避妊結界　
	RESETCOLOR
	PRINTL 

	DRAWLINE
	PRINT [100]決定　
	PRINTPLAIN 　　　　　　
	PRINTFORML 合 計{SUM_COST, 5} / {JUEL:修練P, 5}　　　　　資 金{SUM_PRICE, 5} / {MONEY}
	PRINT [200]全て解除
	PRINTPLAIN 　　　　　
	IF LCHAR
		PRINT [300]前のキャラ
	ELSE
		PRINT                
	ENDIF
	PRINTPLAIN 　　　　　　 
	IF RCHAR
		PRINT [500]次のキャラ
	ELSE
		PRINT                
	ENDIF

	PRINTL 
	PRINTL [999]戻る
	
	$INPUT_LOOP_CHARA_POWERUP
	INPUT
	IF RESULT == 999
		TARGET = LOCAL:99
		VARSET ST_UP
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		RETURN
	ENDIF
	CLEARLINE 26
	CAL_VAR = TALENT:Ｃ結界 + TALENT:Ｖ結界 + TALENT:Ａ結界 + TALENT:Ｂ結界 + 1
	SIF CAL_VAR > 1
		CLEARLINE CAL_VAR

	;デバッグモード
	IF RESULT == 400
		INVERTBIT FLAG:999, 0
		IF FLAG:999 == 1
			SETBGCOLOR 0,0,40
		ELSE
			RESETBGCOLOR
		ENDIF
		GOTO LOOP_CHARA_POWERUP
	;ベース値ダウン*2
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 0
		CAL_VAR = RESULT / 10
		IF BNS_VAR:CAL_VAR >= 2
			BNS_VAR:CAL_VAR -= 2
			COST_VAR:CAL_VAR -= 100
		ENDIF
	;ベース値ダウン
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 1
		CAL_VAR = RESULT / 10
		IF BNS_VAR:CAL_VAR >= 1
			BNS_VAR:CAL_VAR -= 1
			COST_VAR:CAL_VAR -= 50
		ENDIF
	;ベース値アップ
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 2
		CAL_VAR = RESULT / 10
		IF JUEL:修練P >= SUM_COST + 50
			BNS_VAR:CAL_VAR += 1
			COST_VAR:CAL_VAR += 50
		ENDIF
	;ベース値アップ*2
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 3
		CAL_VAR = RESULT / 10
		IF JUEL:修練P >= SUM_COST + 100
			BNS_VAR:CAL_VAR += 2
			COST_VAR:CAL_VAR += 100
		ENDIF
	;刻印の消去
	ELSEIF RESULT < 70 + 刻印数 && RESULT >= 70
		CAL_VAR = RESULT % 10 + ST数
		IF MARK:(RESULT % 10) - BNS_VAR:CAL_VAR > 0 && JUEL:修練P >= SUM_COST + MRK_VAR:(RESULT % 10)
			COST_VAR:CAL_VAR += MRK_VAR:(RESULT % 10)
			BNS_VAR:CAL_VAR += 1
		ENDIF
	;刻印の消去の解除
	ELSEIF RESULT == 79
		FOR LCOUNT, 0, 刻印数
			CAL_VAR = LCOUNT + ST数
			COST_VAR:CAL_VAR = 0
			BNS_VAR:CAL_VAR = 0
		NEXT
	;結界の再構築	修練P
	ELSEIF RESULT < 80 + 感覚数 && RESULT >= 80
		CAL_VAR = RESULT % 10 + ST数 + 刻印数
		IF BNS_VAR:CAL_VAR == 1
			BNS_VAR:CAL_VAR = 0
		ELSEIF JUEL:修練P >= SUM_COST + 30 && BASE:(RESULT % 10 + 30) < MAXBASE:(RESULT % 10 + 30)
			SIF BNS_VAR:CAL_VAR == 2
				SUM_PRICE -= ABL:レベル * 625
			BNS_VAR:CAL_VAR = 1
		ENDIF
	;結界の再構築	資金
	ELSEIF RESULT < 85 + 感覚数 && RESULT >= 85
		CAL_VAR = RESULT % 10 + ST数 + 刻印数 - 5
		IF BNS_VAR:CAL_VAR == 2
			BNS_VAR:CAL_VAR = 0
			SUM_PRICE -= ABL:レベル * 625
		ELSEIF MONEY >= SUM_PRICE + ABL:レベル * 625 && BASE:(RESULT % 10 + 25) < MAXBASE:(RESULT % 10 + 25)
			BNS_VAR:CAL_VAR = 2
			SUM_PRICE += ABL:レベル * 625
		ENDIF
	;結界の再構築の解除
	ELSEIF RESULT == 89
		FOR LCOUNT, 0, 感覚数
			CAL_VAR = LCOUNT + ST数 + 刻印数
			BNS_VAR:CAL_VAR = 0
		NEXT
		SUM_PRICE = 0
	;結界の獲得
	ELSEIF RESULT < 90 + 感覚数 && RESULT >= 90
		CAL_VAR = RESULT % 10
		IF GETBIT(BNS_VAR:16, CAL_VAR)
			CLEARBIT BNS_VAR:16, CAL_VAR
		ELSE
			CAL_VAR:1 = 0
			FOR LCOUNT, 0, 感覚数
				SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
					CAL_VAR:1 += 1
			NEXT
			SIF GETBIT(BNS_VAR:16, 感覚数) || TALENT:避妊結界 > 0
				CAL_VAR:1 += 1
			IF CAL_VAR == 1 && (GETBIT(BNS_VAR:16, 感覚数) || TALENT:避妊結界 > 0)
			ELSEIF CAL_VAR:1 < (感覚数 - 1 - (CHARATALENT_F(TARGET,0,"オトコ") > 0 || CHARATALENT_F(TARGET,1,"オトコ") > 0)) && TALENT:(CAL_VAR + 190) == 0 && JUEL:修練P >= SUM_COST + 50
				SETBIT BNS_VAR:16, CAL_VAR
			ENDIF
		ENDIF
		COST_VAR:12 = 0
		FOR LCOUNT, 0, 感覚数
			SIF GETBIT(BNS_VAR:16, LCOUNT)
				COST_VAR:12 += 1
		NEXT
		SIF GETBIT(BNS_VAR:16, 感覚数)
			COST_VAR:12 += 1
		COST_VAR:12 *= 50
	;避妊結界
	ELSEIF RESULT == 94 && TALENT:Ｖ結界 == 0
		CAL_VAR = 感覚数
		IF GETBIT(BNS_VAR:16, CAL_VAR)
			CLEARBIT BNS_VAR:16, CAL_VAR
		ELSE
			CAL_VAR:1 = 0
			FOR LCOUNT, 0, 感覚数
				SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
					CAL_VAR:1 += 1
			NEXT
			SIF GETBIT(BNS_VAR:16, 感覚数) || TALENT:避妊結界 > 0
				CAL_VAR:1 += 1
			IF (GETBIT(BNS_VAR:16, 1) || TALENT:Ｖ結界 > 0)
			ELSEIF CAL_VAR:1 < (感覚数 - 1 - (CHARATALENT_F(TARGET,0,"オトコ") > 0 || CHARATALENT_F(TARGET,1,"オトコ") > 0)) && TALENT:避妊結界 == 0 && JUEL:修練P >= SUM_COST + 50 
				SETBIT BNS_VAR:16, CAL_VAR
			ENDIF
		ENDIF
		COST_VAR:12 = 0
		FOR LCOUNT, 0, 感覚数
			SIF GETBIT(BNS_VAR:16, LCOUNT)
				COST_VAR:12 += 1
		NEXT
		SIF GETBIT(BNS_VAR:16, 感覚数)
			COST_VAR:12 += 1
		COST_VAR:12 *= 50
		
	;決定
	ELSEIF RESULT == 100
		;ベース値の上昇
		FOR LCOUNT, 0, ST数
			MAG_VAR = 5
			SIF LCOUNT < 2
				MAG_VAR = 50
			IF LCOUNT < BASE数
				BASE:(LCOUNT + 50) += BNS_VAR:LCOUNT * MAG_VAR
			ELSE
				BASE:(LCOUNT + ST始点 - BASE数) += BNS_VAR:LCOUNT * MAG_VAR
			ENDIF
		NEXT
		;刻印の消去
		FOR LCOUNT, 0, 刻印数
			CAL_VAR = LCOUNT + ST数
			SIF BNS_VAR:CAL_VAR > 0 && MARK:(90 + LCOUNT) < MARK:LCOUNT
				MARK:(90 + LCOUNT) = MARK:LCOUNT
			MARK:LCOUNT -= BNS_VAR:CAL_VAR
		NEXT
		;結界の再構築
		FOR LCOUNT, 0, 感覚数
			CAL_VAR = LCOUNT + ST数 + 刻印数
			SIF BNS_VAR:CAL_VAR
				BASE:(LCOUNT + 30) = MAXBASE:(LCOUNT + 30)
		NEXT
		;結界の獲得
		FOR LCOUNT, 0, 感覚数
			IF GETBIT(BNS_VAR:16, LCOUNT)
				TALENT:(LCOUNT + 190) = 1
				;部位結界の設定
				MAXBASE:(LCOUNT + 30) = CAL_SHIELD_F(TARGET)
				BASE:(LCOUNT + 30) = MAXBASE:(LCOUNT + 30)
			ENDIF
		NEXT
		IF GETBIT(BNS_VAR:16, 感覚数)
			TALENT:避妊結界 = 1
		ENDIF
		JUEL:修練P -= SUM_COST
		MONEY -= SUM_PRICE
		CALL LEVELSTATUS, TARGET
		CALL BASEUP_CAL_SHIELD, TARGET
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
	;全て解除
	ELSEIF RESULT == 200
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
	ELSEIF RESULT == 300 && LCHAR
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		ARG = LCHAR
		GOTO LOOP_FIRST
	ELSEIF RESULT == 500 && RCHAR
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		ARG = RCHAR
		GOTO LOOP_FIRST
	ENDIF

	;仮ステータス設定
	FOR LCOUNT, 0, ST数
		MAG_VAR = 50
		SIF LCOUNT > 1
			MAG_VAR = 5
		CAL_VAR:0 = LCOUNT + ST始点 - BASE数
		CAL_VAR:1 = BASE:(CAL_VAR:0) + BNS_VAR:LCOUNT * MAG_VAR
		IF LCOUNT < BASE数
			CAL_VAR:0 = LCOUNT
			CAL_VAR:1 = BASE:(LCOUNT + 50) + BNS_VAR:LCOUNT * MAG_VAR
		ENDIF
		IF CAL_VAR:0 == 0 || CAL_VAR:0 == 1
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:レベル, 400+(CAL_VAR:1-1000)/5, 99999)
		ELSEIF CAL_VAR:0 == 2
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:レベル / 3 + 1, 10+(CAL_VAR:1-100)/2,9999)
		ELSE
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:レベル, 50, 9999)
		ENDIF
	NEXT

	GOTO LOOP_CHARA_POWERUP
ENDIF
PRINTL 

