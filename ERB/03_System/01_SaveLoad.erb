@SAVEGAME_PAGE

;Clear Last Page
CLEARLINE LINECOUNT - FIRSTLINE
REDRAW 0
FIRSTLINE = LINECOUNT

;Print Page Lavel
CALL COLORLINE()
CALL CPRINT(@"%INDENT(2)%★ 記憶の廻廊",,1)
CALL CPRINT(@"%INDENT(8)%どの部屋に記憶を保管しますか？",COLOR_DEFAULT,)
CALL COLORLINE(2,"-")

; セーブモードで表示
CALL PRINT_SAVEDATA(1)
REDRAW 1

INPUT
CLEARLINE 1

SELECTCASE RESULT
	CASE 999  ; 戻る
	CLEARLINE LINECOUNT - FIRSTLINE
	RETURN

	CASE 301 TO (300+MAX_SAVE_SLOT)
	IF GLOBAL:RESULT == 0
		GLOBAL:RESULT = 1
		PRINTW  セーブデータを保護しました
	ELSE
		GLOBAL:RESULT = 0
		PRINTW  セーブデータの保護状態を解除しました
	ENDIF
	GOTO RELOAD
	
	CASE 401 TO (400+MAX_SAVE_SLOT),(400 + AUTOSLOT) TO (400 +AUTOSLOT + MAX_AUTO_SAVE-1)
	LOCAL = RESULT-400
	IF GLOBAL:(300+LOCAL) == 0
		PRINTFORML {LOCAL}番の記憶を削除しますか？
		PRINTL [0] はい   [1] いいえ
		INPUT
		IF RESULT == 0
		DELDATA LOCAL
		PRINTW  セーブデータを削除しました
		ELSE
		PRINTW 削除をやめました
		ENDIF
	ELSE
		PRINTW  保護中の記憶を削除できません。
	ENDIF
	GOTO RELOAD

	CASE 101  ; 前のページへ
	CALL MOVE_SAVEDATA(GLOBAL:200 - 10)
	GOTO RELOAD

	CASE 102  ; 次のページへ
	CALL MOVE_SAVEDATA(GLOBAL:200 + 10)
	GOTO RELOAD

	CASE AUTOSLOT TO (AUTOSLOT + MAX_AUTO_SAVE-1)
	PRINTW オートセーブの枠にセーブすることができません。 
	GOTO RELOAD

	CASE 1 TO MAX_SAVE_SLOT
	LOCAL = RESULT
	CHKDATA LOCAL
	;RESULT == 1は"ファイルが存在しない"
	IF RESULT != 1
		PRINTL 既にデータが存在します。上書きしますか？
		PRINTL [0] はい
		PRINTL [1] いいえ
        $INPUT_LOOP
		INPUT
		IF RESULT == 1
			GOTO RELOAD
		ELSEIF RESULT != 0
			GOTO INPUT_LOOP
		ENDIF
	ENDIF
	CALL SAVEINFO_SP
	SAVEDATA LOCAL, RESULTS

	CASEELSE
	; 入力不可の数字
	GOTO RELOAD	
ENDSELECT


$RELOAD
CLEARLINE LINECOUNT - FIRSTLINE
RESTART


@LOADGAME_PAGE

;Clear Last Page
CLEARLINE LINECOUNT - FIRSTLINE
REDRAW 0
FIRSTLINE = LINECOUNT

;Print Page Lavel
CALL COLORLINE()
CALL CPRINT(@"%INDENT(2)%★ 記憶の廻廊",,1)
CALL CPRINT(@"%INDENT(8)%どの記憶を思い出しますか？",COLOR_DEFAULT,)
CALL COLORLINE(2,"-")

; ロードモードで表示
CALL PRINT_SAVEDATA
REDRAW 1

INPUT
CLEARLINE 1
SELECTCASE RESULT
	CASE 999; 戻る
	CLEARLINE LINECOUNT - FIRSTLINE
	RETURN

	CASE 301 TO (300+MAX_SAVE_SLOT)
	IF GLOBAL:RESULT == 0
		GLOBAL:RESULT = 1
		PRINTW  セーブデータを保護しました
	ELSE
		GLOBAL:RESULT = 0
		PRINTW  セーブデータの保護状態を解除しました
	ENDIF
	GOTO RELOAD

	CASE 401 TO (400+MAX_SAVE_SLOT),(400 + AUTOSLOT) TO (400 +AUTOSLOT + MAX_AUTO_SAVE-1)
	LOCAL = RESULT-400
	IF GLOBAL:(300+LOCAL) == 0
		PRINTFORML {LOCAL}番の記憶を削除しますか？
		PRINTL [0] はい   [1] いいえ
		INPUT
		IF RESULT == 0
		DELDATA LOCAL
		PRINTW  セーブデータを削除しました
		ELSE
		PRINTW 削除をやめました
		ENDIF
	ELSE
		PRINTW  保護中の記憶を削除できません。
	ENDIF
	GOTO RELOAD

	CASE 101; 前のページへ
	CALL MOVE_SAVEDATA(GLOBAL:200 - 10)
	GOTO RELOAD


	CASE 102; 次のページへ
	CALL MOVE_SAVEDATA(GLOBAL:200 + 10)
	GOTO RELOAD
	
	CASE 1 TO MAX_SAVE_SLOT, AUTOSLOT TO (AUTOSLOT + MAX_AUTO_SAVE-1)
	LOCAL = RESULT
	CHKDATA LOCAL
	;RESULT == 0ならロード可能
	IF RESULT != 0
		GOTO RELOAD
	ENDIF
	LOADDATA LOCAL

	CASEELSE  ;それ以外
	GOTO RELOAD
ENDSELECT

$RELOAD
CLEARLINE LINECOUNT - FIRSTLINE
RESTART

@PRINT_SAVEDATA(MODE = 0)
#DIM	MODE	; 0:LOAD 1:SAVE
#DIM 	AUTO,2
#DIM	SLOTNUM

	; セーブデータを表示
	; セーブデータの表示はデザインを優先した為、結構な力業です
	FOR COUNT, 0, 5

		; セーブデータのコメント読み込み & 分割
		; 綺麗に並ぶため0番は使わないようにした

		SLOTNUM = COUNT*2+GLOBAL:200
		; 左時間表示
		CALL SHOW_SAVETIME(SLOTNUM+1)		
		; 右時間表示
		CALL SHOW_SAVETIME(SLOTNUM+2)
		PRINTL 

		; 左情報表示
		CALL SHOW_SAVEINFO_1(SLOTNUM+1)		
		; 右情報表示
		CALL SHOW_SAVEINFO_1(SLOTNUM+2)		
		PRINTL 

		; 左状況表示
		CALL SHOW_SAVEINFO_2(SLOTNUM+1)		
		; 右状況表示
		CALL SHOW_SAVEINFO_2(SLOTNUM+2)		
		PRINTL 
		
		; 左モード表示
		CALL SHOW_SAVEMODE(SLOTNUM+1)		
		; 右モード表示
		CALL SHOW_SAVEMODE(SLOTNUM+2)
		PRINTL 

		PRINTL
	NEXT


	; オートセーブの表示	
	AUTO:0 = AUTOSLOT + (GLOBAL:200/5)
	AUTO:1 = AUTOSLOT + (GLOBAL:200/5) + 1

	ALIGNMENT CENTER
	CALL CPRINT("・・・★ ",COLOR_ORANGE,1)
	CALL CPRINT("AutoSave",COLOR_LIME,1)
	CALL CPRINT(" ★・・・",COLOR_ORANGE,1) 
	PRINTL
	ALIGNMENT LEFT

		; 左時間表示
		CALL SHOW_SAVETIME(AUTO:0)		
		; 右時間表示
		CALL SHOW_SAVETIME(AUTO:1)		
		PRINTL 

		; 左状況表示
		CALL SHOW_SAVEINFO_1(AUTO:0)		
		; 右状況表示
		CALL SHOW_SAVEINFO_1(AUTO:1)
		PRINTL 

		; 左状況表示
		CALL SHOW_SAVEINFO_2(AUTO:0)		
		; 右状況表示
		CALL SHOW_SAVEINFO_2(AUTO:1)
		PRINTL 

		; 左モード表示
		CALL SHOW_SAVEMODE(AUTO:0)		
		; 右モード表示
		CALL SHOW_SAVEMODE(AUTO:1)
		PRINTL 

	CALL ADD_MAXLINE(35)
	CALL COLORLINE()
	PRINTFORML %"　[101] 前のページ", 52, LEFT%%"　 　[999] 戻る",20,LEFT%%"[102] 次のページ　", 52, RIGHT%

RETURN

@SYSTEM_AUTOSAVE
;オートセーブの処理を独自に行う場合、@SYSTEM_AUTOSAVEを定義する
;@SYSTEM_AUTOSAVEが定義されていると、標準のオートセーブの代わりにSYSTEM_AUTOSAVEが呼ばれる。
CALL AUTO_SAVE

;独自のオートセーブ処理
@AUTO_SAVE
DUMPRAND
CALL SAVEINFO_SP
SAVEDATA AUTOSLOT + AUTOSAVE_DOMAIN, RESULTS
AUTOSAVE_DOMAIN += 1
SIF AUTOSAVE_DOMAIN > 9
AUTOSAVE_DOMAIN = 0

; セーブデータの参照ページを変更します
@MOVE_SAVEDATA(ARG)
#DIM LCOUNT

TEMP = 0

	; 変更したページが有効かどうかチェック
	; 0以下 もしくはCONFIGのセーブ数超なら変更失敗
	; 0未満
	IF ARG < 0
		; 最終ページを参照するように
		TEMP = MAX_SAVE_SLOT-10
		LCOUNT = TEMP
		
	; CONFIGのセーブ設定数超
	ELSEIF ARG >= MAX_SAVE_SLOT
		; 初期ページを参照するように
		LCOUNT = 0
		
	; 通常処理
	ELSE
		; 指定されたページを参照する
		TEMP = ARG / 10
		TEMP = TEMP * 10
		LCOUNT = TEMP
	ENDIF

	; 変更したらGLOBAL書き換え
	LOADGLOBAL
	GLOBAL:200 = LCOUNT
	SAVEGLOBAL
	
RETURN
